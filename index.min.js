"userAgent"in navigator&&(navigator.userAgent.includes("iPhone")?document.body.classList.add("iphone"):navigator.userAgent.includes("Android")&&document.body.classList.add("android"));const toggle=document.querySelector("#toggle"),themes={blue:{"--theme-background-color":"linear-gradient(0deg, #0047c8 0%, #0080d4 75%)","--theme-text-color":"#f8e71c","--theme-single-hover-background-color":"#0266c1","--theme-single-background-color":"#0047C8","--theme-single-shadow":"0px 2px 8px 2px rgba(0, 0, 0, 0.1)"},dark:{"--theme-background-color":"linear-gradient(0deg,rgba(0, 0, 0, 1) 0%, rgba(57, 57, 67, 1) 75%)","--theme-text-color":"#0085ff","--theme-single-hover-background-color":"#111112","--theme-single-background-color":"#18181d","--theme-single-shadow":"0px 2px 12px 2px rgba(0, 0, 0, 0.4)"}},setTheme=()=>{if("undefined"!=typeof Storage&&void 0!==localStorage.theme){const e=JSON.parse(localStorage.theme);Object.keys(e.theme).map(n=>{document.documentElement.style.setProperty(n,e.theme[n])}),toggle.checked=e.toggled}},storeTheme=(e,n)=>{"undefined"!=typeof Storage&&(localStorage.theme=JSON.stringify({theme:e,toggled:n}))},toggleTheme=e=>{e.target.checked?(Object.keys(themes.blue).map(e=>{document.documentElement.style.setProperty(e,themes.blue[e])}),storeTheme(themes.blue,e.target.checked)):(Object.keys(themes.dark).map(e=>{document.documentElement.style.setProperty(e,themes.dark[e])}),storeTheme(themes.dark,e.target.checked))};toggle.addEventListener("change",toggleTheme);const getArtistText=e=>{let n="";for(let t=0;t<e.length;t++)t>0&&e.length>2&&(n+=", "),t>0&&t===e.length-1&&(n+=" and "),n+=`<span onclick="window.open('${e[t].url}', '_blank')">`+e[t].name+"</span>";return n},nowPlayingHtml=(e,n)=>`\n        <div class="now-playing-container">\n        <label>Now Playing</label>\n        <div class="now-playing-info">\n            <div class="now-playing-title" onclick="window.open('${e.url}', '_blank')">${e.title}</div>\n            <div class="now-playing-artist">${getArtistText(e.artist)}</div>\n        </div>\n        </div>\n        <div class="now-playing-img" onclick="window.open('${e.url}', '_blank')">\n        <img src=${n.url} alt=${e.title} />\n        </div>\n    `,recentlyPlayedHtml=(e,n)=>`\n        <div class="single-song-container" \n            onclick="window.open('${e.url}', '_blank')">\n            <img\n            src=${n.url}\n            alt=${e.title}\n            class="single-song-image"\n            />\n            <div class="single-song-content">\n            <div class="single-song-title">${e.title}</div>\n            <div class="single-song-artist">${getArtistText(e.artist)}</div>\n            </div>\n        </div>\n    `,displayNotPlayingHtml=()=>'\n        <div class="now-playing-container">\n        <div class="now-playing-info">\n            <div class="now-playing-title">No music is playing</div>\n        </div>\n        </div>\n        <div class="now-playing-img">\n        <img src="./static/generic-album.png" alt="Generic Cover Image" />\n        </div>\n    ',getCookieValue=e=>{const n=document.cookie.match("(^|[^;]+)\\s*"+e+"\\s*=\\s*([^;]+)");return n?n.pop():""};window.onSpotifyWebPlaybackSDKReady=()=>{const e=getCookieValue("access_token"),n=new Spotify.Player({name:"bxRadio",getOAuthToken:n=>{n(e)}});n.addListener("initialization_error",({message:e})=>{console.error(e)}),n.addListener("authentication_error",({message:e})=>{console.error(e)}),n.addListener("account_error",({message:e})=>{console.error(e)}),n.addListener("playback_error",({message:e})=>{console.error(e)}),n.addListener("player_state_changed",e=>{}),n.addListener("ready",({device_id:n})=>{playCurrentSong(e,n),sessionStorage.device_id=n}),n.addListener("not_ready",({device_id:e})=>{}),n.connect()};const playCurrentSong=(e,n)=>{fetch(`https://api.spotify.com/v1/me/player/play?device_id=${n}`,{method:"PUT",body:JSON.stringify({uris:[`spotify:track:${currentSong.id}`],position_ms:currentSong.progress}),headers:{"Content-Type":"application/json",Authorization:`Bearer ${e}`}}).catch(e=>{console.error("error playing current song: ",e)})},nowPlaying=document.querySelector(".now-playing"),recentlyPlayedDiv=document.querySelector(".recently-played-container"),nowPlayingEndpoint="https://bxradio.seanw.io/nowplaying",recentlyPlayedEndpoint="https://bxradio.seanw.io/recentlyplayed";let currentSong={};const renderNowPlaying=e=>{let n=e.images.find(e=>640===e.width);null===n&&((n={}).url="./static/generic-album.png"),void 0!==e&&(nowPlaying.innerHTML=nowPlayingHtml(e,n),setTimeout(fetchNowPlaying,e.duration-e.progress))},renderRecentlyPlayed=e=>{let n="";e.forEach(e=>{let t=e.images.find(e=>64===e.width);null===t&&((t={}).url="./static/generic-album.png"),n+=recentlyPlayedHtml(e,t)}),recentlyPlayedDiv.innerHTML=n},fetchNowPlaying=()=>{fetch(nowPlayingEndpoint).then(e=>{if(204!==e.status)return e.json();nowPlaying.innerHTML='\n        <div class="now-playing-container">\n        <div class="now-playing-info">\n            <div class="now-playing-title">No music is playing</div>\n        </div>\n        </div>\n        <div class="now-playing-img">\n        <img src="./static/generic-album.png" alt="Generic Cover Image" />\n        </div>\n    '}).then(e=>{void 0!==e&&(setTimeout(fetchRecentlyPlayed,e.duration-e.progress+6500),currentSong=e,renderNowPlaying(e),getCookieValue("access_token")&&sessionStorage.device_id&&playCurrentSong(getCookieValue("access_token"),sessionStorage.device_id))}).catch(e=>console.log(e))},fetchRecentlyPlayed=()=>{fetch(recentlyPlayedEndpoint).then(e=>e.json()).then(renderRecentlyPlayed).catch(e=>console.log(e))},displaySongs=()=>{setTheme(),fetchNowPlaying(),fetchRecentlyPlayed()},readAccessToken=()=>{let e="";const n=new URLSearchParams(window.location.search);n.has("data")&&(e=n.get("data"),document.cookie=`access_token=${e}`,window.history.replaceState({},document.title,"/bxradio"))};readAccessToken(),setTheme(),fetchNowPlaying(),fetchRecentlyPlayed();